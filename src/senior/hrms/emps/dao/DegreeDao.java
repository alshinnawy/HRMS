/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface DegreeDao
{
	/** 
	 * Inserts a new row in the DEGREE table.
	 */
	public DegreePk insert(Degree dto) throws DegreeDaoException;

	/** 
	 * Updates a single row in the DEGREE table.
	 */
	public void update(DegreePk pk, Degree dto) throws DegreeDaoException;

	/** 
	 * Deletes a single row in the DEGREE table.
	 */
	public void delete(DegreePk pk) throws DegreeDaoException;

	/** 
	 * Returns the rows from the DEGREE table that matches the specified primary-key value.
	 */
	public Degree findByPrimaryKey(DegreePk pk) throws DegreeDaoException;

	/** 
	 * Returns all rows from the DEGREE table that match the criteria 'DEGREE_ID = :degreeId'.
	 */
	public Degree findByPrimaryKey(int degreeId) throws DegreeDaoException;

	/** 
	 * Returns all rows from the DEGREE table that match the criteria ''.
	 */
	public Degree[] findAll() throws DegreeDaoException;

	/** 
	 * Returns all rows from the DEGREE table that match the criteria 'DEGREE_ID = :degreeId'.
	 */
	public Degree[] findWhereDegreeIdEquals(int degreeId) throws DegreeDaoException;

	/** 
	 * Returns all rows from the DEGREE table that match the criteria 'DEGEREE_NAME = :degereeName'.
	 */
	public Degree[] findWhereDegereeNameEquals(String degereeName) throws DegreeDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the DEGREE table that match the specified arbitrary SQL statement
	 */
	public Degree[] findByDynamicSelect(String sql, Object[] sqlParams) throws DegreeDaoException;

	/** 
	 * Returns all rows from the DEGREE table that match the specified arbitrary SQL statement
	 */
	public Degree[] findByDynamicWhere(String sql, Object[] sqlParams) throws DegreeDaoException;

}
