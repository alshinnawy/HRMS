/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface SectorsDao
{
	/** 
	 * Inserts a new row in the SECTORS table.
	 */
	public SectorsPk insert(Sectors dto) throws SectorsDaoException;

	/** 
	 * Updates a single row in the SECTORS table.
	 */
	public void update(SectorsPk pk, Sectors dto) throws SectorsDaoException;

	/** 
	 * Deletes a single row in the SECTORS table.
	 */
	public void delete(SectorsPk pk) throws SectorsDaoException;

	/** 
	 * Returns the rows from the SECTORS table that matches the specified primary-key value.
	 */
	public Sectors findByPrimaryKey(SectorsPk pk) throws SectorsDaoException;

	/** 
	 * Returns all rows from the SECTORS table that match the criteria 'SECTOR_ID = :sectorId'.
	 */
	public Sectors findByPrimaryKey(int sectorId) throws SectorsDaoException;

	/** 
	 * Returns all rows from the SECTORS table that match the criteria ''.
	 */
	public Sectors[] findAll() throws SectorsDaoException;

	/** 
	 * Returns all rows from the SECTORS table that match the criteria 'SECTOR_ID = :sectorId'.
	 */
	public Sectors[] findWhereSectorIdEquals(int sectorId) throws SectorsDaoException;

	/** 
	 * Returns all rows from the SECTORS table that match the criteria 'SECTOR_NAME = :sectorName'.
	 */
	public Sectors[] findWhereSectorNameEquals(String sectorName) throws SectorsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the SECTORS table that match the specified arbitrary SQL statement
	 */
	public Sectors[] findByDynamicSelect(String sql, Object[] sqlParams) throws SectorsDaoException;

	/** 
	 * Returns all rows from the SECTORS table that match the specified arbitrary SQL statement
	 */
	public Sectors[] findByDynamicWhere(String sql, Object[] sqlParams) throws SectorsDaoException;

}
