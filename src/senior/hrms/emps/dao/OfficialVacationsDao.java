/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface OfficialVacationsDao
{
	/** 
	 * Inserts a new row in the OFFICIAL_VACATIONS table.
	 */
	public OfficialVacationsPk insert(OfficialVacations dto) throws OfficialVacationsDaoException;

	/** 
	 * Updates a single row in the OFFICIAL_VACATIONS table.
	 */
	public void update(OfficialVacationsPk pk, OfficialVacations dto) throws OfficialVacationsDaoException;

	/** 
	 * Deletes a single row in the OFFICIAL_VACATIONS table.
	 */
	public void delete(OfficialVacationsPk pk) throws OfficialVacationsDaoException;

	/** 
	 * Returns the rows from the OFFICIAL_VACATIONS table that matches the specified primary-key value.
	 */
	public OfficialVacations findByPrimaryKey(OfficialVacationsPk pk) throws OfficialVacationsDaoException;

	/** 
	 * Returns all rows from the OFFICIAL_VACATIONS table that match the criteria 'OFFICIAL_VACATION_ID = :officialVacationId'.
	 */
	public OfficialVacations findByPrimaryKey(int officialVacationId) throws OfficialVacationsDaoException;

	/** 
	 * Returns all rows from the OFFICIAL_VACATIONS table that match the criteria ''.
	 */
	public OfficialVacations[] findAll() throws OfficialVacationsDaoException;

	/** 
	 * Returns all rows from the OFFICIAL_VACATIONS table that match the criteria 'OFFICIAL_VACATION_ID = :officialVacationId'.
	 */
	public OfficialVacations[] findWhereOfficialVacationIdEquals(int officialVacationId) throws OfficialVacationsDaoException;

	/** 
	 * Returns all rows from the OFFICIAL_VACATIONS table that match the criteria 'OFFICIAL_VACATION_NAME = :officialVacationName'.
	 */
	public OfficialVacations[] findWhereOfficialVacationNameEquals(String officialVacationName) throws OfficialVacationsDaoException;

	/** 
	 * Returns all rows from the OFFICIAL_VACATIONS table that match the criteria 'DESCRIPTION = :description'.
	 */
	public OfficialVacations[] findWhereDescriptionEquals(String description) throws OfficialVacationsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the OFFICIAL_VACATIONS table that match the specified arbitrary SQL statement
	 */
	public OfficialVacations[] findByDynamicSelect(String sql, Object[] sqlParams) throws OfficialVacationsDaoException;

	/** 
	 * Returns all rows from the OFFICIAL_VACATIONS table that match the specified arbitrary SQL statement
	 */
	public OfficialVacations[] findByDynamicWhere(String sql, Object[] sqlParams) throws OfficialVacationsDaoException;

}
