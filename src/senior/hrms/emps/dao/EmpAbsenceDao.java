/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import java.util.Date;
import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface EmpAbsenceDao
{
	/** 
	 * Inserts a new row in the EMP_ABSENCE table.
	 */
	public EmpAbsencePk insert(EmpAbsence dto) throws EmpAbsenceDaoException;

	/** 
	 * Updates a single row in the EMP_ABSENCE table.
	 */
	public void update(EmpAbsencePk pk, EmpAbsence dto) throws EmpAbsenceDaoException;

	/** 
	 * Deletes a single row in the EMP_ABSENCE table.
	 */
	public void delete(EmpAbsencePk pk) throws EmpAbsenceDaoException;

	/** 
	 * Returns the rows from the EMP_ABSENCE table that matches the specified primary-key value.
	 */
	public EmpAbsence findByPrimaryKey(EmpAbsencePk pk) throws EmpAbsenceDaoException;

	/** 
	 * Returns all rows from the EMP_ABSENCE table that match the criteria 'EMP_ABSENCE_ID = :empAbsenceId'.
	 */
	public EmpAbsence findByPrimaryKey(long empAbsenceId) throws EmpAbsenceDaoException;

	/** 
	 * Returns all rows from the EMP_ABSENCE table that match the criteria ''.
	 */
	public EmpAbsence[] findAll() throws EmpAbsenceDaoException;

	/** 
	 * Returns all rows from the EMP_ABSENCE table that match the criteria 'EMPLOYEE_ID = :employeeId'.
	 */
	public EmpAbsence[] findByEmployees(int employeeId) throws EmpAbsenceDaoException;

	/** 
	 * Returns all rows from the EMP_ABSENCE table that match the criteria 'EMP_ABSENCE_ID = :empAbsenceId'.
	 */
	public EmpAbsence[] findWhereEmpAbsenceIdEquals(long empAbsenceId) throws EmpAbsenceDaoException;

	/** 
	 * Returns all rows from the EMP_ABSENCE table that match the criteria 'EMPLOYEE_ID = :employeeId'.
	 */
	public EmpAbsence[] findWhereEmployeeIdEquals(int employeeId) throws EmpAbsenceDaoException;

	/** 
	 * Returns all rows from the EMP_ABSENCE table that match the criteria 'ABSENCE_DATE = :absenceDate'.
	 */
	public EmpAbsence[] findWhereAbsenceDateEquals(Date absenceDate) throws EmpAbsenceDaoException;

	/** 
	 * Returns all rows from the EMP_ABSENCE table that match the criteria 'NOTE = :note'.
	 */
	public EmpAbsence[] findWhereNoteEquals(String note) throws EmpAbsenceDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the EMP_ABSENCE table that match the specified arbitrary SQL statement
	 */
	public EmpAbsence[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmpAbsenceDaoException;

	/** 
	 * Returns all rows from the EMP_ABSENCE table that match the specified arbitrary SQL statement
	 */
	public EmpAbsence[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmpAbsenceDaoException;

}
