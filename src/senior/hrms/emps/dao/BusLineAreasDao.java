/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface BusLineAreasDao
{
	/** 
	 * Inserts a new row in the BUS_LINE_AREAS table.
	 */
	public BusLineAreasPk insert(BusLineAreas dto) throws BusLineAreasDaoException;

	/** 
	 * Updates a single row in the BUS_LINE_AREAS table.
	 */
	public void update(BusLineAreasPk pk, BusLineAreas dto) throws BusLineAreasDaoException;

	/** 
	 * Deletes a single row in the BUS_LINE_AREAS table.
	 */
	public void delete(BusLineAreasPk pk) throws BusLineAreasDaoException;

	/** 
	 * Returns the rows from the BUS_LINE_AREAS table that matches the specified primary-key value.
	 */
	public BusLineAreas findByPrimaryKey(BusLineAreasPk pk) throws BusLineAreasDaoException;

	/** 
	 * Returns all rows from the BUS_LINE_AREAS table that match the criteria 'BUS_LINE_AREA_ID = :busLineAreaId'.
	 */
	public BusLineAreas findByPrimaryKey(int busLineAreaId) throws BusLineAreasDaoException;

	/** 
	 * Returns all rows from the BUS_LINE_AREAS table that match the criteria ''.
	 */
	public BusLineAreas[] findAll() throws BusLineAreasDaoException;

	/** 
	 * Returns all rows from the BUS_LINE_AREAS table that match the criteria 'BUS_LINE_ID = :busLineId'.
	 */
	public BusLineAreas[] findByBusLines(int busLineId) throws BusLineAreasDaoException;

	/** 
	 * Returns all rows from the BUS_LINE_AREAS table that match the criteria 'BUS_LINE_AREA_ID = :busLineAreaId'.
	 */
	public BusLineAreas[] findWhereBusLineAreaIdEquals(int busLineAreaId) throws BusLineAreasDaoException;

	/** 
	 * Returns all rows from the BUS_LINE_AREAS table that match the criteria 'BUS_LINE_AREA_NAME = :busLineAreaName'.
	 */
	public BusLineAreas[] findWhereBusLineAreaNameEquals(String busLineAreaName) throws BusLineAreasDaoException;

	/** 
	 * Returns all rows from the BUS_LINE_AREAS table that match the criteria 'BUS_LINE_ID = :busLineId'.
	 */
	public BusLineAreas[] findWhereBusLineIdEquals(int busLineId) throws BusLineAreasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the BUS_LINE_AREAS table that match the specified arbitrary SQL statement
	 */
	public BusLineAreas[] findByDynamicSelect(String sql, Object[] sqlParams) throws BusLineAreasDaoException;

	/** 
	 * Returns all rows from the BUS_LINE_AREAS table that match the specified arbitrary SQL statement
	 */
	public BusLineAreas[] findByDynamicWhere(String sql, Object[] sqlParams) throws BusLineAreasDaoException;

}
