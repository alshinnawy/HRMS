/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface InstitutionsDao
{
	/** 
	 * Inserts a new row in the INSTITUTIONS table.
	 */
	public InstitutionsPk insert(Institutions dto) throws InstitutionsDaoException;

	/** 
	 * Updates a single row in the INSTITUTIONS table.
	 */
	public void update(InstitutionsPk pk, Institutions dto) throws InstitutionsDaoException;

	/** 
	 * Deletes a single row in the INSTITUTIONS table.
	 */
	public void delete(InstitutionsPk pk) throws InstitutionsDaoException;

	/** 
	 * Returns the rows from the INSTITUTIONS table that matches the specified primary-key value.
	 */
	public Institutions findByPrimaryKey(InstitutionsPk pk) throws InstitutionsDaoException;

	/** 
	 * Returns all rows from the INSTITUTIONS table that match the criteria 'INSTITUTE_ID = :instituteId'.
	 */
	public Institutions findByPrimaryKey(int instituteId) throws InstitutionsDaoException;

	/** 
	 * Returns all rows from the INSTITUTIONS table that match the criteria ''.
	 */
	public Institutions[] findAll() throws InstitutionsDaoException;

	/** 
	 * Returns all rows from the INSTITUTIONS table that match the criteria 'INSTITUTE_ID = :instituteId'.
	 */
	public Institutions[] findWhereInstituteIdEquals(int instituteId) throws InstitutionsDaoException;

	/** 
	 * Returns all rows from the INSTITUTIONS table that match the criteria 'INSTITUTE_NAME = :instituteName'.
	 */
	public Institutions[] findWhereInstituteNameEquals(String instituteName) throws InstitutionsDaoException;

	/** 
	 * Returns all rows from the INSTITUTIONS table that match the criteria 'INSTITUTE_CITY_ID = :instituteCityId'.
	 */
	public Institutions[] findWhereInstituteCityIdEquals(int instituteCityId) throws InstitutionsDaoException;

	/** 
	 * Returns all rows from the INSTITUTIONS table that match the criteria 'INSTITUTE_ADDRESS = :instituteAddress'.
	 */
	public Institutions[] findWhereInstituteAddressEquals(String instituteAddress) throws InstitutionsDaoException;

	/** 
	 * Returns all rows from the INSTITUTIONS table that match the criteria 'INSTITUTE_WEB_SITE = :instituteWebSite'.
	 */
	public Institutions[] findWhereInstituteWebSiteEquals(String instituteWebSite) throws InstitutionsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the INSTITUTIONS table that match the specified arbitrary SQL statement
	 */
	public Institutions[] findByDynamicSelect(String sql, Object[] sqlParams) throws InstitutionsDaoException;

	/** 
	 * Returns all rows from the INSTITUTIONS table that match the specified arbitrary SQL statement
	 */
	public Institutions[] findByDynamicWhere(String sql, Object[] sqlParams) throws InstitutionsDaoException;

}
