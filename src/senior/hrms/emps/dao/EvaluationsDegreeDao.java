/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface EvaluationsDegreeDao
{
	/** 
	 * Inserts a new row in the EVALUATIONS_DEGREE table.
	 */
	public EvaluationsDegreePk insert(EvaluationsDegree dto) throws EvaluationsDegreeDaoException;

	/** 
	 * Updates a single row in the EVALUATIONS_DEGREE table.
	 */
	public void update(EvaluationsDegreePk pk, EvaluationsDegree dto) throws EvaluationsDegreeDaoException;

	/** 
	 * Deletes a single row in the EVALUATIONS_DEGREE table.
	 */
	public void delete(EvaluationsDegreePk pk) throws EvaluationsDegreeDaoException;

	/** 
	 * Returns the rows from the EVALUATIONS_DEGREE table that matches the specified primary-key value.
	 */
	public EvaluationsDegree findByPrimaryKey(EvaluationsDegreePk pk) throws EvaluationsDegreeDaoException;

	/** 
	 * Returns all rows from the EVALUATIONS_DEGREE table that match the criteria 'EVALUATIONS_DEGREE_ID = :evaluationsDegreeId'.
	 */
	public EvaluationsDegree findByPrimaryKey(int evaluationsDegreeId) throws EvaluationsDegreeDaoException;

	/** 
	 * Returns all rows from the EVALUATIONS_DEGREE table that match the criteria ''.
	 */
	public EvaluationsDegree[] findAll() throws EvaluationsDegreeDaoException;

	/** 
	 * Returns all rows from the EVALUATIONS_DEGREE table that match the criteria 'EVALUATIONS_DEGREE_ID = :evaluationsDegreeId'.
	 */
	public EvaluationsDegree[] findWhereEvaluationsDegreeIdEquals(int evaluationsDegreeId) throws EvaluationsDegreeDaoException;

	/** 
	 * Returns all rows from the EVALUATIONS_DEGREE table that match the criteria 'EVALUATIONS_DEGREE_NAME = :evaluationsDegreeName'.
	 */
	public EvaluationsDegree[] findWhereEvaluationsDegreeNameEquals(String evaluationsDegreeName) throws EvaluationsDegreeDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the EVALUATIONS_DEGREE table that match the specified arbitrary SQL statement
	 */
	public EvaluationsDegree[] findByDynamicSelect(String sql, Object[] sqlParams) throws EvaluationsDegreeDaoException;

	/** 
	 * Returns all rows from the EVALUATIONS_DEGREE table that match the specified arbitrary SQL statement
	 */
	public EvaluationsDegree[] findByDynamicWhere(String sql, Object[] sqlParams) throws EvaluationsDegreeDaoException;

}
