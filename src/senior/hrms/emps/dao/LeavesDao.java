/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface LeavesDao
{
	/** 
	 * Inserts a new row in the LEAVES table.
	 */
	public LeavesPk insert(Leaves dto) throws LeavesDaoException;

	/** 
	 * Updates a single row in the LEAVES table.
	 */
	public void update(LeavesPk pk, Leaves dto) throws LeavesDaoException;

	/** 
	 * Deletes a single row in the LEAVES table.
	 */
	public void delete(LeavesPk pk) throws LeavesDaoException;

	/** 
	 * Returns the rows from the LEAVES table that matches the specified primary-key value.
	 */
	public Leaves findByPrimaryKey(LeavesPk pk) throws LeavesDaoException;

	/** 
	 * Returns all rows from the LEAVES table that match the criteria 'LEAVE_ID = :leaveId'.
	 */
	public Leaves findByPrimaryKey(int leaveId) throws LeavesDaoException;

	/** 
	 * Returns all rows from the LEAVES table that match the criteria ''.
	 */
	public Leaves[] findAll() throws LeavesDaoException;

	/** 
	 * Returns all rows from the LEAVES table that match the criteria 'LEAVE_ID = :leaveId'.
	 */
	public Leaves[] findWhereLeaveIdEquals(int leaveId) throws LeavesDaoException;

	/** 
	 * Returns all rows from the LEAVES table that match the criteria 'LEAVE_NAME = :leaveName'.
	 */
	public Leaves[] findWhereLeaveNameEquals(String leaveName) throws LeavesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the LEAVES table that match the specified arbitrary SQL statement
	 */
	public Leaves[] findByDynamicSelect(String sql, Object[] sqlParams) throws LeavesDaoException;

	/** 
	 * Returns all rows from the LEAVES table that match the specified arbitrary SQL statement
	 */
	public Leaves[] findByDynamicWhere(String sql, Object[] sqlParams) throws LeavesDaoException;

}
