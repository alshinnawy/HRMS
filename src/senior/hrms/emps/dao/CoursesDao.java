/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import java.util.Date;
import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface CoursesDao
{
	/** 
	 * Inserts a new row in the COURSES table.
	 */
	public CoursesPk insert(Courses dto) throws CoursesDaoException;

	/** 
	 * Updates a single row in the COURSES table.
	 */
	public void update(CoursesPk pk, Courses dto) throws CoursesDaoException;

	/** 
	 * Deletes a single row in the COURSES table.
	 */
	public void delete(CoursesPk pk) throws CoursesDaoException;

	/** 
	 * Returns the rows from the COURSES table that matches the specified primary-key value.
	 */
	public Courses findByPrimaryKey(CoursesPk pk) throws CoursesDaoException;

	/** 
	 * Returns all rows from the COURSES table that match the criteria 'COURSE_ID = :courseId'.
	 */
	public Courses findByPrimaryKey(int courseId) throws CoursesDaoException;

	/** 
	 * Returns all rows from the COURSES table that match the criteria ''.
	 */
	public Courses[] findAll() throws CoursesDaoException;

	/** 
	 * Returns all rows from the COURSES table that match the criteria 'COURSE_ID = :courseId'.
	 */
	public Courses[] findWhereCourseIdEquals(int courseId) throws CoursesDaoException;

	/** 
	 * Returns all rows from the COURSES table that match the criteria 'COURSE_NAME = :courseName'.
	 */
	public Courses[] findWhereCourseNameEquals(String courseName) throws CoursesDaoException;

	/** 
	 * Returns all rows from the COURSES table that match the criteria 'COURSE_LOCATION = :courseLocation'.
	 */
	public Courses[] findWhereCourseLocationEquals(String courseLocation) throws CoursesDaoException;

	/** 
	 * Returns all rows from the COURSES table that match the criteria 'DATE_FROM = :dateFrom'.
	 */
	public Courses[] findWhereDateFromEquals(Date dateFrom) throws CoursesDaoException;

	/** 
	 * Returns all rows from the COURSES table that match the criteria 'DATE_TO = :dateTo'.
	 */
	public Courses[] findWhereDateToEquals(Date dateTo) throws CoursesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the COURSES table that match the specified arbitrary SQL statement
	 */
	public Courses[] findByDynamicSelect(String sql, Object[] sqlParams) throws CoursesDaoException;

	/** 
	 * Returns all rows from the COURSES table that match the specified arbitrary SQL statement
	 */
	public Courses[] findByDynamicWhere(String sql, Object[] sqlParams) throws CoursesDaoException;

}
