/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import java.util.Date;
import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface EmpProjectsDao
{
	/** 
	 * Inserts a new row in the EMP_PROJECTS table.
	 */
	public EmpProjectsPk insert(EmpProjects dto) throws EmpProjectsDaoException;

	/** 
	 * Updates a single row in the EMP_PROJECTS table.
	 */
	public void update(EmpProjectsPk pk, EmpProjects dto) throws EmpProjectsDaoException;

	/** 
	 * Deletes a single row in the EMP_PROJECTS table.
	 */
	public void delete(EmpProjectsPk pk) throws EmpProjectsDaoException;

	/** 
	 * Returns the rows from the EMP_PROJECTS table that matches the specified primary-key value.
	 */
	public EmpProjects findByPrimaryKey(EmpProjectsPk pk) throws EmpProjectsDaoException;

	/** 
	 * Returns all rows from the EMP_PROJECTS table that match the criteria 'EMP_PROJECT_ID = :empProjectId'.
	 */
	public EmpProjects findByPrimaryKey(int empProjectId) throws EmpProjectsDaoException;

	/** 
	 * Returns all rows from the EMP_PROJECTS table that match the criteria ''.
	 */
	public EmpProjects[] findAll() throws EmpProjectsDaoException;

	/** 
	 * Returns all rows from the EMP_PROJECTS table that match the criteria 'EMPLOYEE_ID = :employeeId'.
	 */
	public EmpProjects[] findByEmployees(int employeeId) throws EmpProjectsDaoException;

	/** 
	 * Returns all rows from the EMP_PROJECTS table that match the criteria 'PROJECT_ID = :projectId'.
	 */
	public EmpProjects[] findByProjects(int projectId) throws EmpProjectsDaoException;

	/** 
	 * Returns all rows from the EMP_PROJECTS table that match the criteria 'EMP_PROJECT_ID = :empProjectId'.
	 */
	public EmpProjects[] findWhereEmpProjectIdEquals(int empProjectId) throws EmpProjectsDaoException;

	/** 
	 * Returns all rows from the EMP_PROJECTS table that match the criteria 'EMPLOYEE_ID = :employeeId'.
	 */
	public EmpProjects[] findWhereEmployeeIdEquals(int employeeId) throws EmpProjectsDaoException;

	/** 
	 * Returns all rows from the EMP_PROJECTS table that match the criteria 'PROJECT_ID = :projectId'.
	 */
	public EmpProjects[] findWhereProjectIdEquals(int projectId) throws EmpProjectsDaoException;

	/** 
	 * Returns all rows from the EMP_PROJECTS table that match the criteria 'START_DATE = :startDate'.
	 */
	public EmpProjects[] findWhereStartDateEquals(Date startDate) throws EmpProjectsDaoException;

	/** 
	 * Returns all rows from the EMP_PROJECTS table that match the criteria 'END_DATE = :endDate'.
	 */
	public EmpProjects[] findWhereEndDateEquals(Date endDate) throws EmpProjectsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the EMP_PROJECTS table that match the specified arbitrary SQL statement
	 */
	public EmpProjects[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmpProjectsDaoException;

	/** 
	 * Returns all rows from the EMP_PROJECTS table that match the specified arbitrary SQL statement
	 */
	public EmpProjects[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmpProjectsDaoException;

}
