/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import java.util.Date;
import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface EmpEndServiceDao
{
	/** 
	 * Inserts a new row in the EMP_END_SERVICE table.
	 */
	public EmpEndServicePk insert(EmpEndService dto) throws EmpEndServiceDaoException;

	/** 
	 * Updates a single row in the EMP_END_SERVICE table.
	 */
	public void update(EmpEndServicePk pk, EmpEndService dto) throws EmpEndServiceDaoException;

	/** 
	 * Deletes a single row in the EMP_END_SERVICE table.
	 */
	public void delete(EmpEndServicePk pk) throws EmpEndServiceDaoException;

	/** 
	 * Returns the rows from the EMP_END_SERVICE table that matches the specified primary-key value.
	 */
	public EmpEndService findByPrimaryKey(EmpEndServicePk pk) throws EmpEndServiceDaoException;

	/** 
	 * Returns all rows from the EMP_END_SERVICE table that match the criteria 'EMP_END_SERVICE_ID = :empEndServiceId'.
	 */
	public EmpEndService findByPrimaryKey(int empEndServiceId) throws EmpEndServiceDaoException;

	/** 
	 * Returns all rows from the EMP_END_SERVICE table that match the criteria ''.
	 */
	public EmpEndService[] findAll() throws EmpEndServiceDaoException;

	/** 
	 * Returns all rows from the EMP_END_SERVICE table that match the criteria 'EMPLOYEE_ID = :employeeId'.
	 */
	public EmpEndService[] findByEmployees(int employeeId) throws EmpEndServiceDaoException;

	/** 
	 * Returns all rows from the EMP_END_SERVICE table that match the criteria 'END_SERVICE_CAUSE_ID = :endServiceCauseId'.
	 */
	public EmpEndService[] findByEndServiceCause(int endServiceCauseId) throws EmpEndServiceDaoException;

	/** 
	 * Returns all rows from the EMP_END_SERVICE table that match the criteria 'EMP_END_SERVICE_ID = :empEndServiceId'.
	 */
	public EmpEndService[] findWhereEmpEndServiceIdEquals(int empEndServiceId) throws EmpEndServiceDaoException;

	/** 
	 * Returns all rows from the EMP_END_SERVICE table that match the criteria 'EMPLOYEE_ID = :employeeId'.
	 */
	public EmpEndService[] findWhereEmployeeIdEquals(int employeeId) throws EmpEndServiceDaoException;

	/** 
	 * Returns all rows from the EMP_END_SERVICE table that match the criteria 'END_SERVICE_CAUSE_ID = :endServiceCauseId'.
	 */
	public EmpEndService[] findWhereEndServiceCauseIdEquals(int endServiceCauseId) throws EmpEndServiceDaoException;

	/** 
	 * Returns all rows from the EMP_END_SERVICE table that match the criteria 'END_DATE = :endDate'.
	 */
	public EmpEndService[] findWhereEndDateEquals(Date endDate) throws EmpEndServiceDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the EMP_END_SERVICE table that match the specified arbitrary SQL statement
	 */
	public EmpEndService[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmpEndServiceDaoException;

	/** 
	 * Returns all rows from the EMP_END_SERVICE table that match the specified arbitrary SQL statement
	 */
	public EmpEndService[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmpEndServiceDaoException;

}
