/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import java.util.Date;
import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface EmpResponsibilitiesDao
{
	/** 
	 * Inserts a new row in the EMP_RESPONSIBILITIES table.
	 */
	public EmpResponsibilitiesPk insert(EmpResponsibilities dto) throws EmpResponsibilitiesDaoException;

	/** 
	 * Updates a single row in the EMP_RESPONSIBILITIES table.
	 */
	public void update(EmpResponsibilitiesPk pk, EmpResponsibilities dto) throws EmpResponsibilitiesDaoException;

	/** 
	 * Deletes a single row in the EMP_RESPONSIBILITIES table.
	 */
	public void delete(EmpResponsibilitiesPk pk) throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns the rows from the EMP_RESPONSIBILITIES table that matches the specified primary-key value.
	 */
	public EmpResponsibilities findByPrimaryKey(EmpResponsibilitiesPk pk) throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the criteria 'EMP_RESP_ID = :empRespId'.
	 */
	public EmpResponsibilities findByPrimaryKey(int empRespId) throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the criteria ''.
	 */
	public EmpResponsibilities[] findAll() throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the criteria 'EMPLOYEE_ID = :employeeId'.
	 */
	public EmpResponsibilities[] findByEmployees(int employeeId) throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the criteria 'RESPONSIBILITY_ID = :responsibilityId'.
	 */
	public EmpResponsibilities[] findByResponsibilities(int responsibilityId) throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the criteria 'EMP_RESP_ID = :empRespId'.
	 */
	public EmpResponsibilities[] findWhereEmpRespIdEquals(int empRespId) throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the criteria 'EMPLOYEE_ID = :employeeId'.
	 */
	public EmpResponsibilities[] findWhereEmployeeIdEquals(int employeeId) throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the criteria 'RESPONSIBILITY_ID = :responsibilityId'.
	 */
	public EmpResponsibilities[] findWhereResponsibilityIdEquals(int responsibilityId) throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the criteria 'RECEIVED_DATE = :receivedDate'.
	 */
	public EmpResponsibilities[] findWhereReceivedDateEquals(Date receivedDate) throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the criteria 'DELIVERED_DATE = :deliveredDate'.
	 */
	public EmpResponsibilities[] findWhereDeliveredDateEquals(Date deliveredDate) throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the criteria 'NOTE = :note'.
	 */
	public EmpResponsibilities[] findWhereNoteEquals(String note) throws EmpResponsibilitiesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the specified arbitrary SQL statement
	 */
	public EmpResponsibilities[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmpResponsibilitiesDaoException;

	/** 
	 * Returns all rows from the EMP_RESPONSIBILITIES table that match the specified arbitrary SQL statement
	 */
	public EmpResponsibilities[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmpResponsibilitiesDaoException;

}
