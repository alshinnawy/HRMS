/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import java.util.Date;
import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface EmpInjuryDao
{
	/** 
	 * Inserts a new row in the EMP_INJURY table.
	 */
	public EmpInjuryPk insert(EmpInjury dto) throws EmpInjuryDaoException;

	/** 
	 * Updates a single row in the EMP_INJURY table.
	 */
	public void update(EmpInjuryPk pk, EmpInjury dto) throws EmpInjuryDaoException;

	/** 
	 * Deletes a single row in the EMP_INJURY table.
	 */
	public void delete(EmpInjuryPk pk) throws EmpInjuryDaoException;

	/** 
	 * Returns the rows from the EMP_INJURY table that matches the specified primary-key value.
	 */
	public EmpInjury findByPrimaryKey(EmpInjuryPk pk) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'EMP_INJURY_ID = :empInjuryId'.
	 */
	public EmpInjury findByPrimaryKey(int empInjuryId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria ''.
	 */
	public EmpInjury[] findAll() throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'ACCIDENT_REASON_ID = :accidentReasonId'.
	 */
	public EmpInjury[] findByAccidentReasons(int accidentReasonId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'ACCIDENT_TYPE_ID = :accidentTypeId'.
	 */
	public EmpInjury[] findByAccidentTypes(int accidentTypeId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'EMPLOYEE_ID = :employeeId'.
	 */
	public EmpInjury[] findByEmployees(int employeeId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'INJURY_PARENT_ID = :injuryParentId'.
	 */
	public EmpInjury[] findByEmpInjury(int injuryParentId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'HOSPITAL_ID = :hospitalId'.
	 */
	public EmpInjury[] findByHospitals(int hospitalId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'ORGAN_ID = :organId'.
	 */
	public EmpInjury[] findByOrgan(int organId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'EMP_INJURY_ID = :empInjuryId'.
	 */
	public EmpInjury[] findWhereEmpInjuryIdEquals(int empInjuryId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'EMPLOYEE_ID = :employeeId'.
	 */
	public EmpInjury[] findWhereEmployeeIdEquals(int employeeId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'HOSPITAL_ID = :hospitalId'.
	 */
	public EmpInjury[] findWhereHospitalIdEquals(int hospitalId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'ORGAN_ID = :organId'.
	 */
	public EmpInjury[] findWhereOrganIdEquals(int organId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'ACCIDENT_REASON_ID = :accidentReasonId'.
	 */
	public EmpInjury[] findWhereAccidentReasonIdEquals(int accidentReasonId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'ACCIDENT_TYPE_ID = :accidentTypeId'.
	 */
	public EmpInjury[] findWhereAccidentTypeIdEquals(int accidentTypeId) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'DATE_FROM = :dateFrom'.
	 */
	public EmpInjury[] findWhereDateFromEquals(Date dateFrom) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'DATE_TO = :dateTo'.
	 */
	public EmpInjury[] findWhereDateToEquals(Date dateTo) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'HOSPITAL_REPORT = :hospitalReport'.
	 */
	public EmpInjury[] findWhereHospitalReportEquals(String hospitalReport) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'HOSPITAL_REPORT_IMAGE = :hospitalReportImage'.
	 */
	public EmpInjury[] findWhereHospitalReportImageEquals(byte[] hospitalReportImage) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the criteria 'INJURY_PARENT_ID = :injuryParentId'.
	 */
	public EmpInjury[] findWhereInjuryParentIdEquals(int injuryParentId) throws EmpInjuryDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the EMP_INJURY table that match the specified arbitrary SQL statement
	 */
	public EmpInjury[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmpInjuryDaoException;

	/** 
	 * Returns all rows from the EMP_INJURY table that match the specified arbitrary SQL statement
	 */
	public EmpInjury[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmpInjuryDaoException;

}
