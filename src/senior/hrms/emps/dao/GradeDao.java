/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface GradeDao
{
	/** 
	 * Inserts a new row in the GRADE table.
	 */
	public GradePk insert(Grade dto) throws GradeDaoException;

	/** 
	 * Updates a single row in the GRADE table.
	 */
	public void update(GradePk pk, Grade dto) throws GradeDaoException;

	/** 
	 * Deletes a single row in the GRADE table.
	 */
	public void delete(GradePk pk) throws GradeDaoException;

	/** 
	 * Returns the rows from the GRADE table that matches the specified primary-key value.
	 */
	public Grade findByPrimaryKey(GradePk pk) throws GradeDaoException;

	/** 
	 * Returns all rows from the GRADE table that match the criteria 'GRADE_ID = :gradeId'.
	 */
	public Grade findByPrimaryKey(int gradeId) throws GradeDaoException;

	/** 
	 * Returns all rows from the GRADE table that match the criteria ''.
	 */
	public Grade[] findAll() throws GradeDaoException;

	/** 
	 * Returns all rows from the GRADE table that match the criteria 'GRADE_ID = :gradeId'.
	 */
	public Grade[] findWhereGradeIdEquals(int gradeId) throws GradeDaoException;

	/** 
	 * Returns all rows from the GRADE table that match the criteria 'GRADE_NAME = :gradeName'.
	 */
	public Grade[] findWhereGradeNameEquals(String gradeName) throws GradeDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the GRADE table that match the specified arbitrary SQL statement
	 */
	public Grade[] findByDynamicSelect(String sql, Object[] sqlParams) throws GradeDaoException;

	/** 
	 * Returns all rows from the GRADE table that match the specified arbitrary SQL statement
	 */
	public Grade[] findByDynamicWhere(String sql, Object[] sqlParams) throws GradeDaoException;

}
