/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package senior.hrms.emps.dao;

import java.util.Date;
import senior.hrms.emps.dto.*;
import senior.hrms.emps.exceptions.*;

public interface PassportDetailsDao
{
	/** 
	 * Inserts a new row in the PASSPORT_DETAILS table.
	 */
	public PassportDetailsPk insert(PassportDetails dto) throws PassportDetailsDaoException;

	/** 
	 * Updates a single row in the PASSPORT_DETAILS table.
	 */
	public void update(PassportDetailsPk pk, PassportDetails dto) throws PassportDetailsDaoException;

	/** 
	 * Deletes a single row in the PASSPORT_DETAILS table.
	 */
	public void delete(PassportDetailsPk pk) throws PassportDetailsDaoException;

	/** 
	 * Returns the rows from the PASSPORT_DETAILS table that matches the specified primary-key value.
	 */
	public PassportDetails findByPrimaryKey(PassportDetailsPk pk) throws PassportDetailsDaoException;

	/** 
	 * Returns all rows from the PASSPORT_DETAILS table that match the criteria 'PASSPORT_ID = :passportId'.
	 */
	public PassportDetails findByPrimaryKey(int passportId) throws PassportDetailsDaoException;

	/** 
	 * Returns all rows from the PASSPORT_DETAILS table that match the criteria ''.
	 */
	public PassportDetails[] findAll() throws PassportDetailsDaoException;

	/** 
	 * Returns all rows from the PASSPORT_DETAILS table that match the criteria 'ISSUER_ID = :issuerId'.
	 */
	public PassportDetails[] findByIssuers(int issuerId) throws PassportDetailsDaoException;

	/** 
	 * Returns all rows from the PASSPORT_DETAILS table that match the criteria 'PASSPORT_ID = :passportId'.
	 */
	public PassportDetails[] findWherePassportIdEquals(int passportId) throws PassportDetailsDaoException;

	/** 
	 * Returns all rows from the PASSPORT_DETAILS table that match the criteria 'PASSPORT_NO = :passportNo'.
	 */
	public PassportDetails[] findWherePassportNoEquals(String passportNo) throws PassportDetailsDaoException;

	/** 
	 * Returns all rows from the PASSPORT_DETAILS table that match the criteria 'DATE_FROM = :dateFrom'.
	 */
	public PassportDetails[] findWhereDateFromEquals(Date dateFrom) throws PassportDetailsDaoException;

	/** 
	 * Returns all rows from the PASSPORT_DETAILS table that match the criteria 'DATE_END = :dateEnd'.
	 */
	public PassportDetails[] findWhereDateEndEquals(Date dateEnd) throws PassportDetailsDaoException;

	/** 
	 * Returns all rows from the PASSPORT_DETAILS table that match the criteria 'ISSUER_ID = :issuerId'.
	 */
	public PassportDetails[] findWhereIssuerIdEquals(int issuerId) throws PassportDetailsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the PASSPORT_DETAILS table that match the specified arbitrary SQL statement
	 */
	public PassportDetails[] findByDynamicSelect(String sql, Object[] sqlParams) throws PassportDetailsDaoException;

	/** 
	 * Returns all rows from the PASSPORT_DETAILS table that match the specified arbitrary SQL statement
	 */
	public PassportDetails[] findByDynamicWhere(String sql, Object[] sqlParams) throws PassportDetailsDaoException;

}
